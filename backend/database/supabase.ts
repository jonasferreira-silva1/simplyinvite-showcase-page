import { createClient } from '@supabase/supabase-js';

// Obt√©m as informa√ß√µes do dashboard do projeto Supabase
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.warn('‚ö†Ô∏è Supabase URL ou Service Key n√£o definidos. Configure as vari√°veis de ambiente SUPABASE_URL e SUPABASE_SERVICE_KEY.');
}

export const supabase = createClient(
  supabaseUrl || 'https://your-project-url.supabase.co',
  supabaseServiceKey || 'your-service-key-from-supabase'
);

// Fun√ß√£o auxiliar para verificar se o ambiente de autentica√ß√£o est√° configurado
export const isSupabaseConfigured = (): boolean => {
  return !!supabaseUrl && !!supabaseServiceKey && 
    supabaseUrl !== 'https://your-project-url.supabase.co' && 
    supabaseServiceKey !== 'your-service-key-from-supabase';
};

// Fun√ß√£o auxiliar para criar usu√°rios de teste (para uso apenas em desenvolvimento)
export const setupDevelopmentUsers = async (): Promise<void> => {
  if (process.env.DEV && !isSupabaseConfigured()) {
    console.warn('‚ö†Ô∏è Usando modo de desenvolvimento com usu√°rios de teste. N√ÉO use em produ√ß√£o!');
    console.info('üìù Usu√°rios de teste dispon√≠veis:');
    console.info('   - Talento: jovem@example.com / senha123');
    console.info('   - RH: rh@example.com / senha123');
    console.info('   - Gestor: gestor@example.com / senha123');
    
    // Simula√ß√£o do processo de login sem backend real
    // Essa fun√ß√£o s√≥ deve ser usada em ambiente de desenvolvimento!
    return;
  }
};
